{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Nav/Nav.tsx","utils/tabs.ts","components/TabContent/TabContent.tsx","App.tsx","pages/HomePage.tsx","components/Tabs/Tabs.tsx","pages/TabsPage.tsx","pages/NotFoundPage.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Nav","tabs","id","title","content","TabContent","match","useMatch","selectedTab","find","tab","params","tabId","App","matchHome","HomePage","Tabs","isSelected","map","TabsPage","NotFoundPage","ReactDOM","render","path","element","index","replace","document","getElementById"],"mappings":"4NASaA,EAAyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACpC,cAAC,IAAD,CACE,UAAQ,MACRC,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,YAAaD,KAEjBH,GAAIA,EANN,SAQGC,KChBQI,EAAM,kBACjB,qBACEH,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,KAAK,SACzB,cAAC,EAAD,CAAaD,GAAG,QAAQC,KAAK,iBCVxBK,EAAO,CAClB,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBCA7BC,EAAa,WACxB,IAAMC,EAAQC,YAAS,gBAEjBC,EAAcP,EAAKQ,MAAK,SAAAC,GAAG,OAAIA,EAAIR,MAAJ,OAAWI,QAAX,IAAWA,OAAX,EAAWA,EAAOK,OAAOC,UAE9D,OACE,qBAAKf,UAAU,QAAQ,UAAQ,aAA/B,SACGW,EAAW,iBAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAaJ,SAAY,yBCFpCS,G,kBAAM,WACjB,IAAMC,EAAYP,YAAS,KAE3B,OACE,qCACE,cAAC,EAAD,IAEA,qBAAKV,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,KAEEiB,GAAa,cAAC,EAAD,cCnBZC,EAAW,kBACtB,oBAAIlB,UAAU,QAAd,wBCSWmB,EAAkB,SAAC,GAA2B,IAAzBf,EAAwB,EAAxBA,KAAMO,EAAkB,EAAlBA,YAChCS,EAAa,SAACP,GAAD,OAAcA,EAAIR,KAAOM,GAE5C,OACE,oBAAIX,UAAU,gBAAd,SACGI,EAAKiB,KAAI,SAAAR,GAAG,OACX,oBACE,UAAQ,MAERb,UAAWE,IAAW,CAAE,YAAakB,EAAWP,KAHlD,SAME,cAAC,IAAD,CAAMf,GAAE,aAAQe,EAAIR,IAApB,SAA2BQ,EAAIP,SAJ1BO,EAAIR,UCdNiB,EAAW,WACtB,IAAMb,EAAQC,YAAS,gBAEvB,OACE,qCACE,oBAAIV,UAAU,QAAd,uBAEA,cAAC,EAAD,CAAMI,KAAMA,EAAMO,YAAW,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAOK,OAAOC,YCXtCQ,EAAe,kBAC1B,oBAAIvB,UAAU,QAAd,6BCSFwB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAU7B,GAAG,IAAI+B,SAAO,MAEpD,eAAC,IAAD,CAAOH,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,SAG/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,aAI/BG,SAASC,eAAe,W","file":"static/js/main.a16b39c0.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    data-cy=\"Nav\"\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'is-active': isActive },\n    )}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const Nav = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/tabs\" text=\"Tabs\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n","import { useMatch } from 'react-router-dom';\nimport { tabs } from '../../utils/tabs';\n\nexport const TabContent = () => {\n  const match = useMatch('/tabs/:tabId');\n\n  const selectedTab = tabs.find(tab => tab.id === match?.params.tabId);\n\n  return (\n    <div className=\"block\" data-cy=\"TabContent\">\n      {selectedTab ? `${selectedTab?.content}` : 'Please select a tab'}\n    </div>\n  );\n};\n","import { Outlet, useMatch } from 'react-router-dom';\nimport { Nav } from './components/Nav/Nav';\nimport { TabContent } from './components/TabContent/TabContent';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const App = () => {\n  const matchHome = useMatch('/');\n\n  return (\n    <>\n      <Nav />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n\n          {!matchHome && <TabContent />}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTab: string | undefined;\n};\n\nexport const Tabs: FC<Props> = ({ tabs, selectedTab }) => {\n  const isSelected = (tab: Tab) => tab.id === selectedTab;\n\n  return (\n    <ul className=\"tabs is-boxed\">\n      {tabs.map(tab => (\n        <li\n          data-cy=\"Tab\"\n          key={tab.id}\n          className={classNames({ 'is-active': isSelected(tab) })}\n\n        >\n          <Link to={`../${tab.id}`}>{tab.title}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useMatch } from 'react-router-dom';\nimport { Tabs } from '../components/Tabs/Tabs';\nimport { tabs } from '../utils/tabs';\n\nexport const TabsPage = () => {\n  const match = useMatch('/tabs/:tabId');\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <Tabs tabs={tabs} selectedTab={match?.params.tabId} />\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage, NotFoundPage, TabsPage } from './pages';\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"tabs\">\n          <Route index element={<TabsPage />} />\n          <Route path=\":slug\" element={<TabsPage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}